= ProfileValidator

This plugin allows ActiveRecord models to be associated with profiles on other websites. In order to confirm ownership, it checks the profile for the presence of specified URL, which the user will have to add. Currently, any website that uses the HCard microformat (http://microformats.org/wiki/hcard) is supported, but it's possible to work with other sites by subclassing the Profile model. It's been tested with LinkedIn, Flickr, and Twitter.

== Installation

In order to create the Profile database table, run the following generator:

  script/generate profile_validator_migration

== Examples

To add ProfileValidator to your model, simply add 'validates_profile':

  class User < ActiveRecord::Base
    validates_profile
  end
  
This will create the association with the Profile model, and add a new method, <tt>url\_for\_profile</tt>, which you'll probably want to overload to match the user's page within your application. The user will need to put this URL in his/her profile in order to claim it. A Profile has two properties: the URL of the profile page and a Profileable model, which is connected with a polymorphic association. <tt>validates_profile</tt> accepts an optional <tt>:url_format</tt> paramter which specifies a regular expression that the profile URL must match:

  class User < ActiveRecord::Base
    validates_profile :url_format => /^http:\/\/www\.flickr\.com\/people\/\w+$/
  end

If you'd like to associate users with sites that don't support HCard, you can subclass the Profile model and overload the protected <tt>data</tt> method, which is used to fetch profile information, and possibly <tt>is_owned?</tt>, which checks if the profile is owned by the associated model. You would then specify the new Profile like this (for a FacebookProfile):

  class User < ActiveRecord::Base
    validates_profile :site => 'facebook'
  end

== Libraries

ProfileValidator uses mofo (http://mofo.rubyforge.org/) to retrieve microformat data from websites. The test suite uses Shoulda (http://thoughtbot.com/projects/shoulda) for contexts and Mocha (http://mocha.rubyforge.org/) for mocking and stubbing.

== Todo

* Add new functionality to the model based on information in profile
* Make validation optional
* Define a better default URL

---
Copyright (c) 2008 Viget Labs, released under the MIT license
